┐(P∧Q)<=> ┐P∨┐Q
┐(P∨Q)<=> ┐P∧┐Q
P∨(Q∧R)<=>(P∨Q)∧(P∨R)
P∧(Q∨R)<=>(P∧Q)∨(P∧R)
┐(P→Q)<=> P∧┐Q
P→Q<=>┐P∨Q



                        o P1
    
    
          A P2  i>0                   B
                    
    a1  a2  -a1 -a2              b-1  b0  b1
    Q1  Q2   q1  q2      
    
yes  P2 → (Q1 ∨ Q2) <=> ┐P2 ∨ (Q1 ∨ Q2) <=> ┐P2 ∨ Q1 ∨ Q2  
P2 Q1 Q2
1  1  1
1  0  1
1  1  0
0  x  x

yes  P2 → (┐q1 ∧ ┐q2) <=> P2 → ┐(q1 ∨ q2) <=> ┐P2 ∨ (┐q1 ∧ ┐q2) <=> ┐P2 ∨ (┐q1 ∧ ┐q2)
P2 q1 q2
1  0  0
0  x  x

(let ((a!1 (=> (and (bvugt ((_ zero_extend 24) a1) #x00000001)
                    (bvult ((_ zero_extend 24) a2) #x00000001))
               (bvugt ((_ zero_extend 24) b) #x00000003)))
      (a!2 (=> (and (bvugt ((_ zero_extend 24) a1) #x00000000)
                    (bvult ((_ zero_extend 24) a2) #x00000000))
               (bvugt ((_ zero_extend 24) b) #x00000004))))
  (or (and (bvugt ((_ zero_extend 24) a1) #x00000002)
           (bvult ((_ zero_extend 24) a2) #x00000002))
      a!1
      a!2))

(let ((a!1 (or (and (bvugt ((_ zero_extend 24) a1) #x00000003)
                    (bvult ((_ zero_extend 24) a2) #x00000003))
               (and (bvugt ((_ zero_extend 24) a1) #x00000001)
                    (bvult ((_ zero_extend 24) a2) #x00000001))
               (and (bvugt ((_ zero_extend 24) a1) #x00000000)
                    (bvult ((_ zero_extend 24) a2) #x00000000)))))
  (not a!1))

     d            c            b          a
a1>3&&a2<3   a1>2&&a2<2   a1>1&&a2<1 a1>0&&a2<0
    0x3eb       0x3ea        0x3e9       0x3e8
    death       target        fork        fork

                               e          f
                              b>4        b>5
                              0x6b       0x6c
                              target     target
a!1 = (a1>1&&a2<1) =>  b>3
a!2 = (a1>0&&a2<0) =>  b>4

(a1>3&&a2<3) || (a1>2&&a2<2) || a!1 || a!2

(or (and (bvugt ((_ zero_extend 24) a1) #x00000002)
         (bvult ((_ zero_extend 24) a2) #x00000002))
    (and (bvugt ((_ zero_extend 24) a1) #x00000001)
         (bvult ((_ zero_extend 24) a2) #x00000001))
    (and (bvugt ((_ zero_extend 24) a1) #x00000000)
         (bvult ((_ zero_extend 24) a2) #x00000000)))
         
0000000000602080 :

(ite (bvugt ((_ zero_extend 24) b) #x00000004)
     #x0000000000006b6b
     #x00000000000003ea)
0000000000602088 :

(ite (bvugt ((_ zero_extend 24) b) #x00000004)
     #x0000000000000080
     #x0000000000000000)

       
       
       
       
       
       
       
