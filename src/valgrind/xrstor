------ IMark(0x7FFFF7DEC7D4, 5, 0) ------
t3 = Add64(GET:I64(48),0x40:I64) BV64( 00007fffffffe1c0 )
if (CmpNE64(And64(t3,0x3F:I64),0x0:I64)) { PUT(184) = 0x7FFFF7DEC7D4:I64; exit-SigSEGV }
t4 = And64(Or64(Shl64(32Uto64(64to32(GET:I64(32))),0x20:I8),32Uto64(64to32(GET:I64(16)))),0x1F:I64) BV64( 000000000000000e )
t5 = LDle:I64(Add64(t3,0x200:I64)) BV64( 0000000000000002 )
t6 = LDle:I64(Add64(t3,0x208:I64)) BV64( 800000000000000e )
t7 = LDle:I64(Add64(t3,0x210:I64)) BV64( 0000000000000000 )
t8 = And64(t4,0x1:I64) BV64( 0000000000000000 )
t9 = And64(t5,0x1:I64) BV64( 0000000000000000 )
t10 = And64(t8,t9) BV64( 0000000000000000 )
DIRTY CmpNE64(t8,0x0:I64) WrFX-gst(768,4) WrFX-gst(776,64) WrFX-gst(840,8) WrFX-gst(848,8) WrFX-gst(856,8) ::: amd64g_dirtyhelper_FINIT{0x7ff65c9a4039}(GSPTR)
DIRTY CmpNE64(t10,0x0:I64) RdFX-mem(t3,160) WrFX-gst(768,4) WrFX-gst(776,64) WrFX-gst(840,8) WrFX-gst(848,8) WrFX-gst(856,8) ::: amd64g_dirtyhelper_XRSTOR_COMPONENT_0{0x7ff65c9a4935}(GSPTR,t3)
t11 = And64(t4,0x2:I64) BV64( 0000000000000002 )
t12 = And64(t5,0x2:I64) BV64( 0000000000000002 )
t13 = And64(t11,t12) BV64( 0000000000000002 )
t14 = And64(t4,0x6:I64) BV64( 0000000000000006 )
t15 = And64(t5,0x6:I64) BV64( 0000000000000002 )
t16 = And64(t14,t15) BV64( 0000000000000002 )
PUT(216) = ITE(CmpNE64(t14,0x0:I64),0x0:I64,GET:I64(216))
PUT(224) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(224))
PUT(256) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(256))
PUT(288) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(288))
PUT(320) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(320))
PUT(352) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(352))
PUT(384) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(384))
PUT(416) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(416))
PUT(448) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(448))
PUT(480) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(480))
PUT(512) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(512))
PUT(544) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(544))
PUT(576) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(576))
PUT(608) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(608))
PUT(640) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(640))
PUT(672) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(672))
PUT(704) = ITE(CmpNE64(t11,0x0:I64),V128{0x0000},GET:V128(704))
DIRTY CmpNE64(t16,0x0:I64) RdFX-mem(Add64(t3,0x18:I64),8) WrFX-gst(216,8) ::: amd64g_dirtyhelper_XRSTOR_COMPONENT_1_EXCLUDING_XMMREGS{0x7ff65c9a2d83}(GSPTR,t3)
t17 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xA0:I64))) else GET:V128(224)
PUT(224) = t17
t18 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xB0:I64))) else GET:V128(256)
PUT(256) = t18
t19 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xC0:I64))) else GET:V128(288)
PUT(288) = t19
t20 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xD0:I64))) else GET:V128(320)
PUT(320) = t20
t21 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xE0:I64))) else GET:V128(352)
PUT(352) = t21
t22 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0xF0:I64))) else GET:V128(384)
PUT(384) = t22
t23 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x100:I64))) else GET:V128(416)
PUT(416) = t23
t24 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x110:I64))) else GET:V128(448)
PUT(448) = t24
t25 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x120:I64))) else GET:V128(480)
PUT(480) = t25
t26 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x130:I64))) else GET:V128(512)
PUT(512) = t26
t27 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x140:I64))) else GET:V128(544)
PUT(544) = t27
t28 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x150:I64))) else GET:V128(576)
PUT(576) = t28
t29 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x160:I64))) else GET:V128(608)
PUT(608) = t29
t30 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x170:I64))) else GET:V128(640)
PUT(640) = t30
t31 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x180:I64))) else GET:V128(672)
PUT(672) = t31
t32 = if-strict (CmpNE64(t13,0x0:I64)) IdentV128(LDle(Add64(t3,0x190:I64))) else GET:V128(704)
PUT(704) = t32
t33 = And64(t4,0x4:I64) BV64( 0000000000000004 )
t34 = And64(t5,0x4:I64) BV64( 0000000000000000 )
t35 = And64(t33,t34) BV64( 0000000000000000 )
PUT(240) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(240))
PUT(272) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(272))
PUT(304) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(304))
PUT(336) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(336))
PUT(368) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(368))
PUT(400) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(400))
PUT(432) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(432))
PUT(464) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(464))
PUT(496) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(496))
PUT(528) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(528))
PUT(560) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(560))
PUT(592) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(592))
PUT(624) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(624))
PUT(656) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(656))
PUT(688) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(688))
PUT(720) = ITE(CmpNE64(t33,0x0:I64),V128{0x0000},GET:V128(720))
t36 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x240:I64))) else GET:V128(240)
PUT(240) = t36
t37 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x250:I64))) else GET:V128(272)
PUT(272) = t37
t38 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x260:I64))) else GET:V128(304)
PUT(304) = t38
t39 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x270:I64))) else GET:V128(336)
PUT(336) = t39
t40 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x280:I64))) else GET:V128(368)
PUT(368) = t40
t41 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x290:I64))) else GET:V128(400)
PUT(400) = t41
t42 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2A0:I64))) else GET:V128(432)
PUT(432) = t42
t43 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2B0:I64))) else GET:V128(464)
PUT(464) = t43
t44 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2C0:I64))) else GET:V128(496)
PUT(496) = t44
t45 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2D0:I64))) else GET:V128(528)
PUT(528) = t45
t46 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2E0:I64))) else GET:V128(560)
PUT(560) = t46
t47 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x2F0:I64))) else GET:V128(592)
PUT(592) = t47
t48 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x300:I64))) else GET:V128(624)
PUT(624) = t48
t49 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x310:I64))) else GET:V128(656)
PUT(656) = t49
t50 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x320:I64))) else GET:V128(688)
PUT(688) = t50
t51 = if-strict (CmpNE64(t35,0x0:I64)) IdentV128(LDle(Add64(t3,0x330:I64))) else GET:V128(720)
PUT(720) = t51
PUT(184) = 0x7FFFF7DEC7D9:I64